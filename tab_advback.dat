<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the definition of the "Abilities" tab panel. This tab is where
      the user selects the special abilities for the character.

      All public visual elements used with this tab panel start with the prefix "ab"
      to associate them with the tab.
-->

<document signature="Hero Lab Data">


  <!-- abBackgr portal
        Presents a dynamic table where the user can add special abilities for the
        character.
  -->
  <portal
    id="abBackg"
    style="tblNormal">
    <table_dynamic
      component="Background"
      showtemplate="abBackPick"
      choosetemplate="SimpleItem"
      showfixedlast="yes"
      addpick="resBackgr">
      <candidate>!Hide.Background &amp; !Helper.ShipBack</candidate>
      <titlebar><![CDATA[
        @text = "Add a Background - " & hero.child[resBackgr].field[resSummary].text
        ]]></titlebar>
      <description/>
      <headertitle><![CDATA[
        @text = "Backgrounds: " & hero.child[resBackgr].field[resSummary].text
        ]]></headertitle>
      <additem><![CDATA[
        ~if we're in advancement mode, we've been frozen, so display accordingly
        if (state.iscreate = 0) then
          @text = "{text clrgrey}Add Backgrounds Via Advances Tab"
          done
          endif

        ~set the color based on whether the proper number of slots are allocated
        if (field[resLeft].value = 0) then
          @text = "{text clrgrey}"
        elseif (field[resLeft].value < 0) then
          @text = "{text clrwarning}"
          endif
        @text &= "Add New Background"
        ]]></additem>
      </table_dynamic>
    </portal>

  <portal
    id="abAdvant"
    style="tblNormal">
    <table_dynamic
      component="Advantage"
      showtemplate="abAdvPick"
      choosetemplate="abAdvSel"
      choosesortset="AdvSort"
      showfixedlast="yes"
      addpick="resAttrib">
      <candidate>!Hide.Advantage</candidate>
      <titlebar><![CDATA[
        @text = "Add an Advantage"
        ]]></titlebar>
      <description/>
      <headertitle><![CDATA[
        @text = "Advantages: " & hero.child[resAdvant].field[resSummary].text
        ]]></headertitle>
      <additem><![CDATA[
        ~set the color based on whether the proper number of slots are allocated
        if (field[resLeft].value = 0) then
          @text = "{text clrgrey}"
        elseif (field[resLeft].value < 0) then
          @text = "{text clrwarning}"
          endif
        @text &= "Add New Advantage"
        ]]></additem>
      </table_dynamic>
    </portal>
    
  <!-- Quirks portal -->
  <portal
    id="abQuirk"
    style="tblInvis">
    <table_fixed
      component="Quirk"
      scrollable="no"
      showtemplate="quPick"
	  alwaysupdate="yes">
	  <list>!User.Hidden</list>
	  <headertitle><![CDATA[
        @text = "Quirks"
        ]]>
        </headertitle>
      </table_fixed>
    </portal>

  <!-- abPick template
        Displays the name of the pick/thing and an info button with the basic
        description text. This is basically the "SimpleItem" template, with one
        key difference. Auto-added abilities such as those conferred by races are
        sorted and colored differently to distinguish their nature.
  -->
  <template
    id="abBackPick"
    name="Background Pick"
    compset="Background"
    marginhorz="3"
    marginvert="2">
    <live>!Helper.ShipBack</live>
    
    <portal
      id="name"
      style="lblNormal"
      showinvalid="yes">
      <label
        field="name">
        </label>
      </portal>

    <portal
      id="info"
      style="actInfo">
      <action
        action="info">
        </action>
      <mouseinfo/>
      </portal>

    <portal
      id="delete"
      style="actDelete"
      tiptext="Click to delete this item">
      <action
        action="delete">
        </action>
      </portal>

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[info].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~position our tallest portal at the top
      portal[info].top = 0

      ~center the other portals vertically
      perform portal[name].centervert
      perform portal[delete].centervert

      ~position the delete portal on the far right
      perform portal[delete].alignedge[right,0]

      ~position the info portal to the left of the delete button
      perform portal[info].alignrel[rtol,delete,-8]

      ~position the name on the left and let it use all available space
      portal[name].left = 0
      portal[name].width = minimum(portal[name].width,portal[info].left - 5)

      ~if the background is auto-added, change its font to indicate that fact
      if (candelete = 0) then
        perform portal[name].setstyle[lblAuto]
        endif
      ]]></position>

    </template>

  <template
    id="abAdvPick"
    name="Advantage Pick"
    compset="Advantage"
    marginhorz="3"
    marginvert="2">

    <portal
      id="name"
      style="lblNormal"
      showinvalid="yes">
      <label
        field="name">
        </label>
      </portal>

    <portal
      id="cost"
      style="lblNormal"
      showinvalid="yes">
      <label>
        <labeltext><![CDATA[
          @text = "Cost: " & field[advTotCost].value          
          ]]></labeltext>
        </label>
      </portal>
      
    <portal
      id="info"
      style="actInfo">
      <action
        action="info">
        </action>
      <mouseinfo/>
      </portal>

    <portal
      id="delete"
      style="actDelete"
      tiptext="Click to delete this item">
      <action
        action="delete">
        </action>
      </portal>
      
    <portal
      id="menu1"
      style="menuSmall">
      <menu_things
       	field="usrChosen1"
       	component="none"
       	maxvisible="10"
       	usepicksfield="usrSource1"
       	candidatefield="usrCandid1">
       	</menu_things>
      </portal> 
      
    <portal
      id="domain"
      style="editNormal">
      <edit
        field="domDomain">
        </edit>
      </portal>
            
    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[info].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~position our tallest portal at the top
      portal[info].top = 0
      portal[domain].width = 150
      portal[menu1].width = 150
      portal[cost].width = 50

      ~center the other portals vertically
      perform portal[name].centervert
      perform portal[cost].centervert
      perform portal[delete].centervert
      perform portal[menu1].centervert

      ~position the delete portal on the far right
      perform portal[delete].alignedge[right,0]

      ~position the info portal to the left of the delete button
      perform portal[info].alignrel[rtol,delete,-8]

      ~position the cost portal to the left of the delete button
      perform portal[cost].alignrel[rtol,info,-8]
      
      portal[menu1].visible = tagis[User.UserSelect]
      portal[domain].visible = tagis[User.NeedDomain]
      
      ~if we don't need a menu or domain, position the name across entire row
      if (tagis[User.UserSelect] + tagis[User.NeedDomain] = 0) then
        ~position the name on the left and let it use all available space
        portal[name].left = 0
        portal[name].width = minimum(portal[name].width,portal[cost].left - 5)
        endif

      ~if we need a menu or domain, reveal and position the name accordingly
      ~Menu  
      if (tagis[User.UserSelect] = 1) then
       
        ~position the menu portal to the left of the info button
        perform portal[menu1].alignrel[rtol,cost,-8]

        ~position the name on the left and let it use all available space
        portal[name].left = 0
        portal[name].width = minimum(portal[name].width,portal[menu1].left - 5)
        endif
        
      ~Domain
      if (tagis[User.NeedDomain] = 1) then
        
        ~position the domain portal to the left of the info button
        perform portal[domain].alignrel[rtol,cost,-8]
        
        ~position the name on the left and let it use all available space
        portal[name].left = 0
        portal[name].width = minimum(portal[name].width,portal[domain].left - 5)
        endif
      
           
      ~if the background is auto-added, change its font to indicate that fact
      if (candelete = 0) then
        perform portal[name].setstyle[lblAuto]
        endif
      ]]></position>

    </template>


  <template
    id="quPick"
    name="Quirks Pick"
    compset="Quirk"
    marginhorz="3"
    marginvert="2">
    <portal
      id="desc"
      style="lblLeft"
      showinvalid="yes">
      <label       
        ismultiline="yes"
        field="descript">
        </label>
      </portal>
      
    <position><![CDATA[
      ~set up our height based on our tallest portal
      portal[desc].height = 50
      height = 50

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~position our tallest portal at the top
      portal[desc].top = 0

      ~center the portals vertically
      perform portal[desc].centervert

      ~position the name on the left and let it use all available space
      portal[desc].left = 0
      portal[desc].width = width
      
      ~if the background is auto-added, change its font to indicate that fact
      if (candelete = 0) then
        perform portal[desc].setstyle[lblAuto]
        endif
      ]]></position>

    </template>
    
  <template
    id="abAdvSel"
    name="Advantage Select"
    compset="Advantage"
    marginhorz="3"
    marginvert="2">

    <portal
      id="name"
      style="lblNormal"
      showinvalid="yes">
      <label>
        <labeltext><![CDATA[
          @text = field[name].text
                    
          doneif (tagis[NatCost.?] = 0)
          
          var nation as string
          call NationName
          
          @text &= " (" & nation & " Cost: " & tagvalue[NatCost.?] & ")"          
          ]]></labeltext>
        </label>
      </portal>
      
    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[name].height
      width = 250

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~center the other portals vertically
      perform portal[name].centervert

      ~position the name on the left
      portal[name].left = 0

      ~center the name if this is a show-only thing
      if (tagis[thing.showonly] <> 0) then
        perform portal[name].centerhorz
        endif
        
      ]]></position>

    </template>

  <!-- Advantages layout
       
  -->
  <layout
    id="advback">
    <portalref portal="virthead" />
    <portalref portal="hubhead" />
    <portalref portal="faithhead" />
    <portalref portal="hdrSecSoc"/>
    <portalref portal="vhVirtue" taborder="40"/>
    <portalref portal="vhHubris" taborder="50"/>
    <portalref portal="baFaith" taborder="30"/>
    <portalref portal="chsSecSoc" taborder="60"/>
    <portalref portal="abAdvant" taborder="20"/>
    <portalref portal="abQuirk" taborder="30"/>
 

    <!-- This script sizes and positions the layout and its child visual elements. -->
    <position><![CDATA[
      ~freeze our table in advancement mode to disable adding new choices
      ~Note: All freezing must be done *before* any positioning is performed.
      if (state.iscreate = 0) then
        portal[abAdvant].freeze = 1
        endif

      portal[abQuirk].visible = 1
      
      ~size and position the virtues in the top right; we set the height to
      ~the full layout height, but the table will only use the space it needs
      portal[virthead].width = width / 2 - 5
      portal[virthead].top = 0
      portal[virthead].left = 0
      portal[virthead].height = 20
      
      portal[vhVirtue].width = portal[virthead].width
      portal[vhVirtue].top = portal[virthead].bottom + 5
      portal[vhVirtue].left = portal[virthead].left    
      portal[vhVirtue].height = 20

      ~size and position the virtues in the top right; we set the height to
      ~the full layout height, but the table will only use the space it needs
      portal[hubhead].width = portal[virthead].width
      portal[hubhead].left = portal[virthead].right + 10
      portal[hubhead].top = portal[virthead].top
      portal[hubhead].height = 20
      
      portal[vhHubris].width = portal[hubhead].width
      portal[vhHubris].top = portal[hubhead].bottom + 5
      portal[vhHubris].left = portal[hubhead].left     
      portal[vhHubris].height = 20

      ~size and position everything after this below the horizontal seperator
      portal[faithhead].width = portal[virthead].width
      portal[faithhead].top = portal[vhVirtue].bottom + 15
      portal[faithhead].left = portal[virthead].left
      portal[faithhead].height = 20
      
      portal[baFaith].width = portal[faithhead].width
      portal[baFaith].top = portal[faithhead].bottom + 5
      portal[baFaith].left = portal[faithhead].left     
      portal[baFaith].height = 20

      ~put the selection of Secret Societies at the bottom
      portal[hdrSecSoc].width = portal[hubhead].width
      portal[hdrSecSoc].left = portal[hubhead].left
      portal[hdrSecSoc].top = portal[faithhead].top
      portal[hdrSecSoc].height = 20
      
      portal[chsSecSoc].width = portal[hdrSecSoc].width
      portal[chsSecSoc].left = portal[hdrSecSoc].left
      portal[chsSecSoc].top = portal[hdrSecSoc].bottom + 5
      portal[chsSecSoc].height = 20

      ~position and size the table to span the full layout; it will only use the
      ~vertical space that it actually needs
      portal[abQuirk].height = height/4
      portal[abQuirk].top = bottom - portal[abQuirk].height
      portal[abQuirk].width = width
      
      portal[abAdvant].top = portal[baFaith].bottom + 15
      portal[abAdvant].height = portal[abQuirk].top - portal[abAdvant].top
      portal[abAdvant].width = width

      
      ]]></position>

    </layout>


  <!-- abilities panel
        This is the "Abilities" panel shown within Hero Lab. Since we want this
        panel to appear after Basics and within the traits grouping, we assign it
        an "order" of 120.

        The logic for this panel is similar to the logic for the Basics panel, so
        please refer to the Basics panel for more details.
  -->
  <panel
    id="advback"
    name="Advantages"
    marginhorz="5"
    marginvert="5"
    order="120">
    <live>!HideTab.advback</live>
    <layoutref layout="advback"/>
    <position><![CDATA[
      ]]></position>
    </panel>
  </document>
